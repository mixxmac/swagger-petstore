{"_type":"export","__export_format":4,"__export_date":"2020-06-03T23:10:43.662Z","__export_source":"insomnia.desktop.app:v2020.1.3","resources":[{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f323acbe44","authentication":{},"body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"string\"\n}"},"created":1590417418916,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418916,"method":"POST","modified":1591225507157,"name":"Add a new pet to the store","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet","_type":"request"},{"_id":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","created":1590417418922,"description":"Everything about your Pets","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1590417418922,"modified":1591225507164,"name":"pet","parentId":"wrk_b43cb512679d46599fbf2995e8d3c6f3","_type":"request_group"},{"_id":"wrk_b43cb512679d46599fbf2995e8d3c6f3","created":1590417385279,"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","modified":1591225507174,"name":"Swagger Petstore 1.0.2","parentId":null,"scope":"spec","_type":"workspace"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f374a7a059","authentication":{},"body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"string\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"string\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"string\"\n}"},"created":1590417418914,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418914,"method":"PUT","modified":1591225507155,"name":"Update an existing pet","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f380ab0d08","authentication":{},"body":{},"created":1590417418911,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418912,"method":"GET","modified":1591225507152,"name":"Finds Pets by status","parameters":[{"disabled":false,"name":"status","value":"available"}],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet/findByStatus","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f342a17980","authentication":{},"body":{},"created":1590417418909,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418909,"method":"GET","modified":1591225507149,"name":"Finds Pets by tags","parameters":[{"disabled":false,"name":"tags","value":"string"}],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet/findByTags","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f33d1a51d3","authentication":{},"body":{},"created":1590417418908,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418908,"method":"GET","modified":1591225507147,"name":"Find pet by ID","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet/{{ petId }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3a4608701","authentication":{},"body":{"mimeType":"application/x-www-form-urlencoded"},"created":1590417418906,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418906,"method":"POST","modified":1591225507144,"name":"Updates a pet in the store with form data","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet/{{ petId }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3e804bd05","authentication":{},"body":{},"created":1590417418905,"description":"","headers":[{"disabled":true,"name":"api_key","value":"string"}],"isPrivate":false,"metaSortKey":-1590417418905,"method":"DELETE","modified":1591225507143,"name":"Deletes a pet","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f31b034c38","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/pet/{{ petId }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3443ac9e7","authentication":{},"body":{},"created":1590417418903,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418903,"method":"GET","modified":1591225507141,"name":"Returns pet inventories by status","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f33a21295d","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/store/inventory","_type":"request"},{"_id":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f33a21295d","created":1590417418920,"description":"Access to Petstore orders","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1590417418920,"modified":1591225507162,"name":"store","parentId":"wrk_b43cb512679d46599fbf2995e8d3c6f3","_type":"request_group"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3e24a4f9e","authentication":{},"body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"petId\": 0,\n  \"quantity\": 0,\n  \"shipDate\": \"2020-06-03T23:05:07.109Z\",\n  \"status\": \"string\",\n  \"complete\": true\n}"},"created":1590417418900,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418900,"method":"POST","modified":1591225507138,"name":"Place an order for a pet","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f33a21295d","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/store/order","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3f021bcd3","authentication":{},"body":{},"created":1590417418898,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418898,"method":"GET","modified":1591225507137,"name":"Find purchase order by ID","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f33a21295d","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/store/order/{{ orderId }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f315e47538","authentication":{},"body":{},"created":1590417418888,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418888,"method":"DELETE","modified":1591225507134,"name":"Delete purchase order by ID","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f33a21295d","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/store/order/{{ orderId }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3fe3d55d0","authentication":{},"body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"username\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"password\": \"string\",\n  \"phone\": \"string\",\n  \"userStatus\": 0\n}"},"created":1590417418886,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418886,"method":"POST","modified":1591225507133,"name":"Create user","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user","_type":"request"},{"_id":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","created":1590417418918,"description":"Operations about user","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1590417418918,"modified":1591225507159,"name":"user","parentId":"wrk_b43cb512679d46599fbf2995e8d3c6f3","_type":"request_group"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f34cb83333","authentication":{},"body":{"mimeType":"application/json","text":"[\n  {\n    \"id\": 0,\n    \"username\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"password\": \"string\",\n    \"phone\": \"string\",\n    \"userStatus\": 0\n  }\n]"},"created":1590417418884,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418884,"method":"POST","modified":1591225507130,"name":"Creates list of users with given input array","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/createWithArray","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3e94a615f","authentication":{},"body":{"mimeType":"application/json","text":"[\n  {\n    \"id\": 0,\n    \"username\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"email\": \"string\",\n    \"password\": \"string\",\n    \"phone\": \"string\",\n    \"userStatus\": 0\n  }\n]"},"created":1590417418882,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418882,"method":"POST","modified":1591225507128,"name":"Creates list of users with given input array","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/createWithList","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f300ac9da2","authentication":{},"body":{},"created":1590417418880,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418880,"method":"GET","modified":1591225507125,"name":"Logs user into the system","parameters":[{"disabled":false,"name":"username","value":"string"},{"disabled":false,"name":"password","value":"string"}],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/login","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f3740025cb","authentication":{},"body":{},"created":1590417418879,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418879,"method":"GET","modified":1591225507122,"name":"Logs out current logged in user session","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/logout","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f374f1d1d1","authentication":{},"body":{},"created":1590417418878,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418878,"method":"GET","modified":1591225507119,"name":"Get user by user name","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/{{ username }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f36d74493f","authentication":{},"body":{"mimeType":"application/json","text":"{\n  \"id\": 0,\n  \"username\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"email\": \"string\",\n  \"password\": \"string\",\n  \"phone\": \"string\",\n  \"userStatus\": 0\n}"},"created":1590417418876,"description":"","headers":[{"name":"Content-Type","value":"application/json"}],"isPrivate":false,"metaSortKey":-1590417418876,"method":"PUT","modified":1591225507116,"name":"Updated user","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/{{ username }}","_type":"request"},{"_id":"req_wrk_b43cb512679d46599fbf2995e8d3c6f338e8e88f","authentication":{},"body":{},"created":1590417418873,"description":"","headers":[],"isPrivate":false,"metaSortKey":-1590417418873,"method":"DELETE","modified":1591225507112,"name":"Delete user","parameters":[],"parentId":"fld_wrk_b43cb512679d46599fbf2995e8d3c6f312dea96f","settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingFollowRedirects":"global","settingRebuildPath":true,"settingSendCookies":true,"settingStoreCookies":true,"url":"{{ base_url }}/user/{{ username }}","_type":"request"},{"_id":"env_c261cda3502f4f6c8769856a695209a26fdf5e8f","color":null,"created":1590417385324,"data":{"base_url":"{{ scheme }}://{{ host }}{{ base_path }}"},"dataPropertyOrder":null,"isPrivate":false,"metaSortKey":1590417385324,"modified":1591225507171,"name":"Base environment","parentId":"wrk_b43cb512679d46599fbf2995e8d3c6f3","_type":"environment"},{"_id":"jar_c261cda3502f4f6c8769856a695209a26fdf5e8f","cookies":[],"created":1590417385326,"modified":1590417385326,"name":"Default Jar","parentId":"wrk_b43cb512679d46599fbf2995e8d3c6f3","_type":"cookie_jar"},{"_id":"spc_da9a840a758945c9b00c14934f843d73","contentType":"yaml","contents":"openapi: 3.0.0\ninfo:\n  description: \"This is a sample server Petstore server.  You can find out more about\n    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\n    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key\n    `special-key` to test the authorization filters.\"\n  version: 1.0.2\n  title: Swagger Petstore\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\ntags:\n  - name: pet\n    description: Everything about your Pets\n    externalDocs:\n      description: Find out more\n      url: http://swagger.io\n  - name: store\n    description: Access to Petstore orders\n  - name: user\n    description: Operations about user\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  /pet:\n    post:\n      tags:\n        - pet\n      summary: Add a new pet to the store\n      description: \"\"\n      operationId: addPet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"405\":\n          description: Invalid input\n    put:\n      tags:\n        - pet\n      summary: Update an existing pet\n      description: \"\"\n      operationId: updatePet\n      requestBody:\n        $ref: \"#/components/requestBodies/Pet\"\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n        \"405\":\n          description: Validation exception\n  /pet/findByStatus:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by status\n      description: Multiple status values can be provided with comma separated strings\n      operationId: findPetsByStatus\n      parameters:\n        - name: status\n          in: query\n          description: Status values that need to be considered for filter\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - available\n                - pending\n                - sold\n              default: available\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid status value\n  /pet/findByTags:\n    get:\n      tags:\n        - pet\n      summary: Finds Pets by tags\n      description: Multiple tags can be provided with comma separated strings. Use tag1,\n        tag2, tag3 for testing.\n      operationId: findPetsByTags\n      parameters:\n        - name: tags\n          in: query\n          description: Tags to filter by\n          required: true\n          explode: true\n          schema:\n            type: array\n            items:\n              type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid tag value\n      deprecated: true\n  \"/pet/{petId}\":\n    get:\n      tags:\n        - pet\n      summary: Find pet by ID\n      description: Returns a single pet\n      operationId: getPetById\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet to return\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Pet\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n    post:\n      tags:\n        - pet\n      summary: Updates a pet in the store with form data\n      description: \"\"\n      operationId: updatePetWithForm\n      parameters:\n        - name: petId\n          in: path\n          description: ID of pet that needs to be updated\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/x-www-form-urlencoded:\n            schema:\n              type: object\n              properties:\n                name:\n                  description: Updated name of the pet\n                  type: string\n                status:\n                  description: Updated status of the pet\n                  type: string\n      responses:\n        \"405\":\n          description: Invalid input\n    delete:\n      tags:\n        - pet\n      summary: Deletes a pet\n      description: \"\"\n      operationId: deletePet\n      parameters:\n        - name: api_key\n          in: header\n          required: false\n          schema:\n            type: string\n        - name: petId\n          in: path\n          description: Pet id to delete\n          required: true\n          schema:\n            type: integer\n            format: int64\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Pet not found\n  /store/inventory:\n    get:\n      tags:\n        - store\n      summary: Returns pet inventories by status\n      description: Returns a map of status codes to quantities\n      operationId: getInventory\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties:\n                  type: integer\n                  format: int32\n  /store/order:\n    post:\n      tags:\n        - store\n      summary: Place an order for a pet\n      description: \"\"\n      operationId: placeOrder\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Order\"\n        description: order placed for purchasing the pet\n        required: true\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid Order\n  \"/store/order/{orderId}\":\n    get:\n      tags:\n        - store\n      summary: Find purchase order by ID\n      description: For valid response try integer IDs with value >= 1 and <= 10. Other\n        values will generated exceptions\n      operationId: getOrderById\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of pet that needs to be fetched\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n            maximum: 10\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Order\"\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n    delete:\n      tags:\n        - store\n      summary: Delete purchase order by ID\n      description: For valid response try integer IDs with positive integer value. Negative\n        or non-integer values will generate API errors\n      operationId: deleteOrder\n      parameters:\n        - name: orderId\n          in: path\n          description: ID of the order that needs to be deleted\n          required: true\n          schema:\n            type: integer\n            format: int64\n            minimum: 1\n      responses:\n        \"400\":\n          description: Invalid ID supplied\n        \"404\":\n          description: Order not found\n  /user:\n    post:\n      tags:\n        - user\n      summary: Create user\n      description: This can only be done by the logged in user.\n      operationId: createUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Created user object\n        required: true\n      responses:\n        default:\n          description: successful operation\n  /user/createWithArray:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithArrayInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/createWithList:\n    post:\n      tags:\n        - user\n      summary: Creates list of users with given input array\n      description: \"\"\n      operationId: createUsersWithListInput\n      requestBody:\n        $ref: \"#/components/requestBodies/UserArray\"\n      responses:\n        default:\n          description: successful operation\n  /user/login:\n    get:\n      tags:\n        - user\n      summary: Logs user into the system\n      description: \"\"\n      operationId: loginUser\n      parameters:\n        - name: username\n          in: query\n          description: The user name for login\n          required: true\n          schema:\n            type: string\n        - name: password\n          in: query\n          description: The password for login in clear text\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          headers:\n            X-Rate-Limit:\n              description: calls per hour allowed by the user\n              schema:\n                type: integer\n                format: int32\n            X-Expires-After:\n              description: date in UTC when token expires\n              schema:\n                type: string\n                format: date-time\n          content:\n            application/xml:\n              schema:\n                type: string\n            application/json:\n              schema:\n                type: string\n        \"400\":\n          description: Invalid username/password supplied\n  /user/logout:\n    get:\n      tags:\n        - user\n      summary: Logs out current logged in user session\n      description: \"\"\n      operationId: logoutUser\n      responses:\n        default:\n          description: successful operation\n  \"/user/{username}\":\n    get:\n      tags:\n        - user\n      summary: Get user by user name\n      description: \"\"\n      operationId: getUserByName\n      parameters:\n        - name: username\n          in: path\n          description: \"The name that needs to be fetched. Use user1 for testing. \"\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: successful operation\n          content:\n            application/xml:\n              schema:\n                $ref: \"#/components/schemas/User\"\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/User\"\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\n    put:\n      tags:\n        - user\n      summary: Updated user\n      description: This can only be done by the logged in user.\n      operationId: updateUser\n      parameters:\n        - name: username\n          in: path\n          description: name that need to be updated\n          required: true\n          schema:\n            type: string\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/User\"\n        description: Updated user object\n        required: true\n      responses:\n        \"400\":\n          description: Invalid user supplied\n        \"404\":\n          description: User not found\n    delete:\n      tags:\n        - user\n      summary: Delete user\n      description: This can only be done by the logged in user.\n      operationId: deleteUser\n      parameters:\n        - name: username\n          in: path\n          description: The name that needs to be deleted\n          required: true\n          schema:\n            type: string\n      responses:\n        \"400\":\n          description: Invalid username supplied\n        \"404\":\n          description: User not found\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\ncomponents:\n  requestBodies:\n    UserArray:\n      content:\n        application/json:\n          schema:\n            type: array\n            items:\n              $ref: \"#/components/schemas/User\"\n      description: List of user object\n      required: true\n    Pet:\n      content:\n        application/json:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n        application/xml:\n          schema:\n            $ref: \"#/components/schemas/Pet\"\n      description: Pet object that needs to be added to the store\n      required: true\n  schemas:\n    Order:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        petId:\n          type: integer\n          format: int64\n        quantity:\n          type: integer\n          format: int32\n        shipDate:\n          type: string\n          format: date-time\n        status:\n          type: string\n          description: Order Status\n          enum:\n            - placed\n            - approved\n            - delivered\n        complete:\n          type: boolean\n          default: false\n      xml:\n        name: Order\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        phone:\n          type: string\n        userStatus:\n          type: integer\n          format: int32\n          description: User Status\n      xml:\n        name: User\n    Category:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Category\n    Tag:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        name:\n          type: string\n      xml:\n        name: Tag\n    Pet:\n      type: object\n      required:\n        - name\n        - photoUrls\n      properties:\n        id:\n          type: integer\n          format: int64\n        category:\n          $ref: \"#/components/schemas/Category\"\n        name:\n          type: string\n          example: doggie\n        photoUrls:\n          type: array\n          xml:\n            name: photoUrl\n            wrapped: true\n          items:\n            type: string\n        tags:\n          type: array\n          xml:\n            name: tag\n            wrapped: true\n          items:\n            $ref: \"#/components/schemas/Tag\"\n        status:\n          type: string\n          description: pet status in the store\n          enum:\n            - available\n            - pending\n            - sold\n      xml:\n        name: Pet\n    ApiResponse:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        type:\n          type: string\n        message:\n          type: string","created":1590417385281,"fileName":"Swagger Petstore 1.0.2","modified":1591225507179,"parentId":"wrk_b43cb512679d46599fbf2995e8d3c6f3","_type":"api_spec"},{"_id":"env_env_c261cda3502f4f6c8769856a695209a26fdf5e8f_sub","color":null,"created":1590417418925,"data":{"base_path":"/v2","host":"petstore.swagger.io","scheme":"https"},"dataPropertyOrder":null,"isPrivate":false,"metaSortKey":1590417418925,"modified":1591225507167,"name":"OpenAPI env","parentId":"env_c261cda3502f4f6c8769856a695209a26fdf5e8f","_type":"environment"}]}